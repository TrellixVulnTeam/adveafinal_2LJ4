{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'withCredentials': 'true',\n    'Authorization': 'Basic ' + btoa('3660466:039774fe3ba03e97b92a336961d168ae') // 'Authorization': 'Basic ' + btoa('18599062:67dbe3d5a25f95367089ae52861d1c3e')\n\n  })\n};\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    // private apilink = 'https://portal.advea.se/api/orders/';\n    // private paynovaapilink = 'https://portal.advea.se/proxy/proxy.ashx?https://testapi.paynova.com/';\n    constructor(http) {\n      this.http = http;\n      this.paynovaapilink = '/addresses/SE/';\n      this.orderapilink = '/orders/';\n      this.apilink = 'https://localhost:44343/api/orders/';\n    }\n\n    generatepaynovadata(data) {\n      return this.http.post(this.apilink + 'genrateorderforpaynova', data);\n    }\n\n    Login(data) {\n      return this.http.post(this.apilink + 'login', data);\n    } // Live Links\n    // getcustomerdata(cid: any):Observable<any> {\n    //   return this.http.get<any>(this.paynovaapilink + 'addresses/SE/' + cid, httpOptions);\n    // }\n    // paynovacreateorder(orderdata: any):Observable<any> {\n    //   return this.http.post<any>(this.paynovaapilink + 'orders/create', orderdata, httpOptions);\n    // }\n    // authorizeorder(ordernumber: string, orderdata: any):Observable<any> {\n    //   return this.http.post<any>(this.paynovaapilink + 'orders/' + ordernumber + '/authorizePayment', orderdata, httpOptions);\n    // }\n    // // initializationpayment(ordernumber:string,paymentoption:any): Observable<any>{\n    // //   return this.http.post<any>(this.orderapilink+ ordernumber +'/authorizePayment',orderdata,httpOptions);\n    // //   //return this.http.post<any>(this.paynovaapilink+'/orders/' + ordernumber +'/initializePayment',paymentoption,httpOptions);\n    // // }\n    // finalizeorder(ordernumber: string, transactionnumber: string, total: number):Observable<any> {\n    //   return this.http.post<any>(this.paynovaapilink + 'orders/' + ordernumber + '/transactions/' + transactionnumber + '/finalize/' + total, httpOptions);\n    // }\n    // Local Links\n\n\n    getcustomerdata(cid) {\n      return this.http.get(this.paynovaapilink + 'addresses/SE/' + cid, httpOptions);\n    }\n\n    paynovacreateorder(orderdata) {\n      return this.http.post(this.orderapilink + 'orders/create', orderdata, httpOptions);\n    }\n\n    authorizeorder(ordernumber, orderdata) {\n      return this.http.post(this.orderapilink + 'orders/' + ordernumber + '/authorizePayment', orderdata, httpOptions);\n    }\n\n    finalizeorder(ordernumber, transactionnumber, total) {\n      return this.http.post(this.orderapilink + 'orders/' + ordernumber + '/transactions/' + transactionnumber + '/finalize/' + total, httpOptions);\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}